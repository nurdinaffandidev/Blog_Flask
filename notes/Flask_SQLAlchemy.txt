Here's a **quick start guide** to using **Flask** with **SQLAlchemy** (the ORM) in Python:

---

## ðŸ§± 1. Install Required Packages

```bash
pip install Flask Flask-SQLAlchemy
```

---

## ðŸ“¦ 2. Basic App Structure

```python
from flask import Flask
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# Configure your database URL
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///example.db'  # You can also use PostgreSQL, MySQL, etc.
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False  # Avoids overhead

db = SQLAlchemy(app)
```

---

## ðŸ§¬ 3. Define Your Models

```python
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)

    def __repr__(self):
        return f'<User {self.username}>'
```

---

## ðŸ›  4. Create the Database

```bash
python
>>> from your_app import db
>>> db.create_all()
```

This will create the tables based on your models.

---

## ðŸš€ 5. Add and Query Data

```python
# Add a user
new_user = User(username='alice', email='alice@example.com')
db.session.add(new_user)
db.session.commit()

# Query users
users = User.query.all()
print(users)
```

---

## ðŸ§ª Example Flask Route Using the DB

```python
@app.route('/')
def index():
    users = User.query.all()
    return '<br>'.join([f'{u.username} - {u.email}' for u in users])
```

---

## ðŸ§¹ Optional: Flask-Migrate for Migrations

For managing schema changes:

```bash
pip install Flask-Migrate
```

And integrate with:

```python
from flask_migrate import Migrate
migrate = Migrate(app, db)
```

---

## ðŸ”š Notes

* Default DB (`sqlite:///example.db`) creates a file in your app folder.
* For production, use PostgreSQL or MySQL (`postgresql://user:pass@localhost/dbname`).
* Always `commit()` after `add()` or `delete()`.

---

Let me know if you want help with:

* Models with relationships (`One-to-Many`, `Many-to-Many`)
* REST APIs with Flask and SQLAlchemy
* Using blueprints or project structure
